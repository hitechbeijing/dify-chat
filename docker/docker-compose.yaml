services:
  # Certbot service
  # use `docker-compose --profile certbot up` to start the certbot service.
  certbot:
    image: certbot/certbot
    profiles:
      - certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/html
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot/conf/live:/etc/letsencrypt/live
      - ./certbot/update-cert.template.txt:/update-cert.template.txt
      - ./certbot/docker-entrypoint.sh:/docker-entrypoint.sh
    env_file: .env
    entrypoint: [ '/docker-entrypoint.sh' ]
    command: [ 'tail', '-f', '/dev/null' ]
  dify-chat:
    container_name: dify-chat
    image: ${DOCKER_IMAGE}
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./nginx/https.conf.template:/etc/nginx/https.conf.template
      - ./nginx/certbot.conf.template:/etc/nginx/certbot.conf.template
      - ./nginx/301.conf.template:/etc/nginx/301.conf.template
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/docker-entrypoint.sh:/docker-entrypoint-mount.sh
      - ./nginx/ssl:/etc/ssl
      - ./certbot/conf/live:/etc/letsencrypt/live # cert dir (with certbot container)
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/html
    ports:
      - ${EXPOSE_NGINX_PORT}:${NGINX_PORT}
      - ${EXPOSE_NGINX_SSL_PORT}:${NGINX_SSL_PORT}
    entrypoint: [ 'sh', '-c', "cp /docker-entrypoint-mount.sh /docker-entrypoint.sh && sed -i 's/\r$$//' /docker-entrypoint.sh && chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh" ]
    networks:
      - dify-chat
    restart: on-failure
    env_file: .env
networks:
  dify-chat:
    driver: bridge
